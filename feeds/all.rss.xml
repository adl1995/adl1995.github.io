<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>/home/adeel</title><link>/</link><description></description><lastBuildDate>Tue, 09 Aug 2022 21:30:00 +0200</lastBuildDate><item><title>Creating a JSON logger for Flask</title><link>/creating-a-json-logger-for-flask.html</link><description>&lt;p&gt;By default Flask writes logs to the console in plain-text format. This can be limiting if you intend to store your logs in a text file and periodically send them to a central monitoring service. For example, &lt;a href="https://www.elastic.co/kibana/"&gt;Kibana&lt;/a&gt;, only accepts JSON logs by default.&lt;/p&gt;
&lt;p&gt;You might also want to enrich your logs with additional metadata, e.g. timestamps, method names, log type (Warn, Debug, etc.). In this post we will use the Python &lt;a href="https://docs.python.org/3/library/logging.html"&gt;logging&lt;/a&gt; library to modify Flask's logging format and write them to a text file. In the end we will see how to periodically send these logs to an external service using &lt;a href="https://flume.apache.org/"&gt;Flume&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In our app we would like to setup two types of loggers. One for writing …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Tue, 09 Aug 2022 21:30:00 +0200</pubDate><guid isPermaLink="false">tag:None,2022-08-09:/creating-a-json-logger-for-flask.html</guid><category>automation</category></item><item><title>My course portfolio for Computational Photography</title><link>/my-course-portfolio-for-computational-photography.html</link><description>&lt;p&gt;This semester I took Georgia Tech's &lt;a href="https://omscs.gatech.edu/cs-6475-computational-photography"&gt;Computational Photography&lt;/a&gt; course. It was a very hands-on course, mostly comprising of assignments and projects. This post includes the results for all its assignments and projects.&lt;/p&gt;
&lt;h2&gt;1. Pyramid blending&lt;/h2&gt;
&lt;p&gt;The goal of this assignment was to combine two separate images into a seamlessly blended image, using a mask. The input took a left image, a right image, and a mask, which was a binary image used to overlap the two inputs.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pyramid blending" src="/images/portfolio/pyramid_blending.png"&gt;&lt;/p&gt;
&lt;h2&gt;2. Panoramas&lt;/h2&gt;
&lt;p&gt;For this assignment we wrote code to align &amp;amp; stitch together a series of images into a panorama. We followed the text from &lt;a href="http://szeliski.org/Book/1stEdition.htm"&gt;Computer Vision: Algorithms and Applications&lt;/a&gt; book. The assignment followed homography techniques to create the output picture.&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;img src="/images/portfolio/panorama_1.jpg" alt="panorama_1" style="width:350px;"/&gt;
    &lt;img src="/images/portfolio/panorama_2.jpg" alt="panorama_2" style="width:350px;"/&gt;
    &lt;img src="/images/portfolio/panorama_3.jpg" alt="panorama_3" style="width:350px;"/&gt;
&lt;/p&gt;

&lt;p&gt;After stitching these …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Fri, 15 Apr 2022 14:22:00 +0200</pubDate><guid isPermaLink="false">tag:None,2022-04-15:/my-course-portfolio-for-computational-photography.html</guid><category>image-processing</category></item><item><title>Building a Camera Obscura</title><link>/building-a-camera-obscura.html</link><description>&lt;p&gt;A &lt;a href="https://en.wikipedia.org/wiki/Camera_obscura"&gt;camera obscura&lt;/a&gt; is the predecessor of modern day cameras. It works by letting light in through a small pinhole and projects it onto a surface (e.g. a wall).&lt;/p&gt;
&lt;p&gt;To build a room obscura we need to choose a room which gets plenty of sunlight. I chose my bedroom for this.&lt;/p&gt;
&lt;p&gt;&lt;img alt="scene" src="/images/obscura/scene.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Next we need to identify all the sources of light and completely seal them. In my case I used garbage bags to cover my two windows.&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;img src="/images/obscura/setup_2.jpg" alt="setup_2" style="width:350px;"/&gt;
    &lt;img src="/images/obscura/setup_3.jpg" alt="setup_3" style="width:350px;"/&gt;
&lt;/p&gt;

&lt;p&gt;I used packing tape instead of duct tape as it can tear off paint from the wood. However, this led to some light bleeding in from the edges. I fixed this using aluminum foil.&lt;/p&gt;
&lt;p&gt;&lt;img alt="failed" src="/images/obscura/failed.jpg"&gt;&lt;/p&gt;
&lt;p&gt;I experimented with three pinholes of various sizes …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sat, 29 Jan 2022 11:02:00 +0100</pubDate><guid isPermaLink="false">tag:None,2022-01-29:/building-a-camera-obscura.html</guid><category>image-processing</category></item><item><title>Passwordless logins with Yubikey</title><link>/passwordless-logins-with-yubikey.html</link><description>&lt;p&gt;Yubikey is currently the de facto device for U2F authentication. It enables adding an extra layer of security on top of SSH, system login, signing GPG keys, and so on. It is also compatible with several other authentication methods, such as WebAuthn and PAM.&lt;/p&gt;
&lt;p&gt;This post will show how to leverage your Yubikey for unlocking the system lock-screen, both with and without using a password. It will then delve into how to automatically lock the screen when the Yubikey is unplugged.&lt;/p&gt;
&lt;p&gt;To achieve logins with Yubikeys we require a PAM configuration. PAM or Pluggable Authentication Modules define the authentication flow for common Linux utilities, such as &lt;code&gt;sudo&lt;/code&gt;, &lt;code&gt;su&lt;/code&gt;, and &lt;code&gt;passwd&lt;/code&gt;. We will override the default authentication flow for the &lt;a href="https://linux.die.net/man/1/xlock"&gt;xlock …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sun, 29 Nov 2020 07:50:00 +0100</pubDate><guid isPermaLink="false">tag:None,2020-11-29:/passwordless-logins-with-yubikey.html</guid><category>automation</category></item><item><title>Plotting graphical data using RRDtool and a Python Collectd plugin</title><link>/plotting-graphical-data-using-rrdtool-and-a-python-collectd-plugin.html</link><description>&lt;!-- Date: 2019-05-30 07:57 --&gt;
&lt;!-- Title: Using RRDtool and a Python Collectd plugin to graph weather data --&gt;
&lt;!-- Title: Plotting graphs data from a Python Collectd plugin using RRDtool --&gt;

&lt;p&gt;Collectd is Unix daemon used for periodically collecting system usage statistics, which can include identifying CPU or memory bottleneck issues. The collected data can then be transformed to graphs using &lt;a href="https://oss.oetiker.ch/rrdtool"&gt;RRDtool&lt;/a&gt; or a &lt;a href="https://en.wikipedia.org/wiki/Grafana"&gt;Grafana&lt;/a&gt; dashboard (Grafana provides real time graphs and complex search queries).&lt;/p&gt;
&lt;p&gt;The daemon itself is modular and functions through external plugins with each plugin performing a distinct function. This post will explore a plugin which &lt;em&gt;collects weather information of a given city&lt;/em&gt;. The first section will explain how the plugin configuration works and how to plot a graph of the output data using RRDtool. Finally, we will delve into the plugin internals and see how it is written.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: For an intro on how to setup Collectd …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Mon, 11 May 2020 11:02:00 +0200</pubDate><guid isPermaLink="false">tag:None,2020-05-11:/plotting-graphical-data-using-rrdtool-and-a-python-collectd-plugin.html</guid><category>automation</category></item><item><title>The Kerberos Authentication System for Single Sign-On (SSO)</title><link>/the-kerberos-authentication-system-for-single-sign-on-sso.html</link><description>&lt;p&gt;When working with authentication protocols the commonly used technique in the past was known as &lt;em&gt;authentication by assertion&lt;/em&gt;. In this scheme a user logs in to their machine which then authenticates their request to a remote server. Once the authentication is finished the user can then communicate with other services. This provides a very low level of security, which has led to numerous vulnerabilities in the early versions of the &lt;a href="https://en.wikipedia.org/wiki/Berkeley_r-commands#Security"&gt;rlogin&lt;/a&gt; Unix login utility.&lt;/p&gt;
&lt;p&gt;An alternative solution is for the user to repeatedly provide their password each time they wish to use a service. This however requires the user to send their plain text password over the network, which could potentially be intercepted by a third-party user and can get …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sun, 21 Jul 2019 21:43:00 +0200</pubDate><guid isPermaLink="false">tag:None,2019-07-21:/the-kerberos-authentication-system-for-single-sign-on-sso.html</guid><category>Security</category></item><item><title>Programmatically organising your backpacking trip using Google My Maps</title><link>/programmatically-organising-your-backpacking-trip-using-google-my-maps.html</link><description>&lt;blockquote&gt;
&lt;p&gt;This blog post has been converted from a &lt;a href="https://docs.google.com/presentation/d/10NlBmnUk7qsh0nPso3Lqg8OvoP6CZg8sHJx1gllHem4/edit#slide=id.g577465d654_0_0"&gt;presentation&lt;/a&gt; I gave during the &lt;a href="https://indico.cern.ch/event/771113/overview"&gt;Thematic CERN School of Computing 2019&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When planning a journey to a new country or a city it helps to mark down all the places you would like to visit and eventually create a travel plan for each day. I personally use Google Maps for finding places of interest including historical buildings, museums, and libraries. As an example, if I was to visit say Split, Croatia I could search for "places to visit split" on Google Maps. It will then list all the attractions based on features such as reviews and popularity.&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;img src="/images/google-my-maps/things-to-do-split.png" alt="Things to do in Split" style="width:300px;"/&gt;
&lt;/p&gt;

&lt;p&gt;Although it is possible to individually "Save" each place in Google Maps, it does not …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Thu, 30 May 2019 09:14:00 +0200</pubDate><guid isPermaLink="false">tag:None,2019-05-30:/programmatically-organising-your-backpacking-trip-using-google-my-maps.html</guid><category>Automation</category></item><item><title>Building RPM packages with rpmbuild, Koji, and GitLab-CI</title><link>/building-rpm-packages-with-rpmbuild-koji-and-gitlab-ci.html</link><description>&lt;p&gt;The RPM system facilitates the user to query and update a software package. It also allows examining package interdependencies, and verifying package file permissions. This blog post will describe the process of building an RPM package using the &lt;code&gt;rpmbuild&lt;/code&gt; utility and will then explain how to schedule build tasks using Koji. Finally, it will describe how to automate the build pipeline using continuous integration in GitLab.&lt;/p&gt;
&lt;h3&gt;1. RPM Package Manager&lt;/h3&gt;
&lt;p&gt;RPM Package Manager is an open-source package management system which was originally designed for Red Hat Linux, but it is now supported on most Linux distributions. RPM packages can generally be of two types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Binary RPM: A binary RPM contains the compiled binary of a complete application (or a library …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Mon, 06 May 2019 08:24:00 +0200</pubDate><guid isPermaLink="false">tag:None,2019-05-06:/building-rpm-packages-with-rpmbuild-koji-and-gitlab-ci.html</guid><category>Automation</category></item><item><title>Google Summer of Code 2018 final evaluation report</title><link>/google-summer-of-code-2018-final-evaluation-report.html</link><description>&lt;h4&gt;Link to GitHub repository: &lt;a href="https://github.com/BoostGSoC18/geometry"&gt;&lt;code&gt;https://github.com/BoostGSoC18/geometry&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The work is present under the following branches:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BoostGSoC18/geometry/tree/feature/geodesic_direct"&gt;feature/geodesic_direct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BoostGSoC18/geometry/tree/feature/karney_inverse"&gt;feature/karney_inverse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BoostGSoC18/geometry/tree/example/distance_formula"&gt;example/distance_formula&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;The goal of this project was to implement the direct and inverse geodesic algorithms in the &lt;a href="https://github.com/boostorg/geometry"&gt;Boost Geometry&lt;/a&gt; library. These methods were proposed by Charles Karney in his &lt;a href="https://arxiv.org/abs/1109.4448"&gt;paper&lt;/a&gt; in 2011.&lt;/p&gt;
&lt;p&gt;In a previous &lt;a href="https://adl1995.github.io/inaccuracy-in-boost-geometry-geodesic-algorithms-for-nearly-antipodal-points.html"&gt;blog post&lt;/a&gt;, the inaccuracy of the existing methods was discussed, which provided inconsistent results for nearly antipodal points. To monitor the progress, a weekly &lt;a href="https://github.com/BoostGSoC18/geometry/issues/1"&gt;report&lt;/a&gt; was provided through GitHub, which summarized the work done. Finally, &lt;a href="https://github.com/BoostGSoC18/geometry/issues/3"&gt;benchmarks&lt;/a&gt; were performed against existing methods in Boost Geometry. The performance metric used was execution time and accuracy.&lt;/p&gt;
&lt;p&gt;Additional material, such as utility scripts …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Thu, 09 Aug 2018 09:28:00 +0200</pubDate><guid isPermaLink="false">tag:None,2018-08-09:/google-summer-of-code-2018-final-evaluation-report.html</guid><category>GSoC</category></item><item><title>Using variadic templates with lambda expressions in C++ for constrained optimization</title><link>/using-variadic-templates-with-lambda-expressions-in-c-for-constrained-optimization.html</link><description>&lt;p&gt;Constrained optimization problems are encountered in numerous domains, such as &lt;a href="https://www.princeton.edu/~fhs/paper199/paper199.pdf"&gt;protein folding&lt;/a&gt;, &lt;a href="http://cai2r.net/public/documents/FlorianKnoll_thesis.pdf"&gt;Magnetic Resonance Image reconstruction&lt;/a&gt;, and &lt;a href="https://ieeexplore.ieee.org/document/4100822"&gt;radiation therapy&lt;/a&gt;. In this problem, we are given with an objective function which is to be minimized or maximized with respect to constraints on some variables. The constraints can either be soft constraints or hard constraints, which can be specified by boolean operators, such as equality, relational, and conditional operators. &lt;/p&gt;
&lt;p&gt;This post provides insight on how to model constraints using lambda expressions, and how to pass a varying number of constraints to a function using variadic templates. Before moving on with the C++ implementation, it will be helpful to review how variadic functions are used in C and how they differ from the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Fri, 01 Jun 2018 15:44:00 +0200</pubDate><guid isPermaLink="false">tag:None,2018-06-01:/using-variadic-templates-with-lambda-expressions-in-c-for-constrained-optimization.html</guid><category>GSoC</category><category>C++</category></item><item><title>Inaccuracy in Boost Geometry geodesic algorithms for nearly antipodal points</title><link>/inaccuracy-in-boost-geometry-geodesic-algorithms-for-nearly-antipodal-points.html</link><description>&lt;p&gt;Nearly antipodal points or antipodes refer to the most geographically distant points on a sphere, that is, the points are diametrically opposite to each other. If a line is drawn between these two points, it passes through the center of the sphere and forms its diameter.&lt;/p&gt;
&lt;p&gt;Computing the great circle distance between these two points is often a corner case for most geodesic computations, and the distance is either overestimated or underestimated. In case of &lt;a href="https://en.wikipedia.org/wiki/Vincenty%27s_formulae"&gt;Vincenty's formulae&lt;/a&gt;, the solution fails to converge, or provides inaccurate results. This can have major implications in applications which rely on accurate results, such as flight navigation systems. The software can handle this either by doing an error analysis check and providing specific values through …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Thu, 10 May 2018 21:55:00 +0200</pubDate><guid isPermaLink="false">tag:None,2018-05-10:/inaccuracy-in-boost-geometry-geodesic-algorithms-for-nearly-antipodal-points.html</guid><category>GSoC</category></item><item><title>An overview of activation functions used in neural networks</title><link>/an-overview-of-activation-functions-used-in-neural-networks.html</link><description>&lt;p&gt;An activation function is used to introduce non-linearity in an artificial neural network. It allows us to model a class label or score that varies non-linearly with independent variables. Non-linearity means that the output cannot be replicated from a linear combination of inputs; this allows the model to learn complex mappings from the available data, and thus the network becomes a &lt;a href="https://en.wikipedia.org/wiki/Universal_approximation_theorem"&gt;universal approximator&lt;/a&gt;. On the other hand, a model which uses a linear function (i.e. no activation function) is unable to make sense of complicated data, such as, speech, videos, etc. and is effective only up to a single layer.&lt;/p&gt;
&lt;p&gt;To allow backpropagation through the network, the selected activation function should be differentiable. This property is required to compute …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Mon, 13 Nov 2017 10:54:00 +0100</pubDate><guid isPermaLink="false">tag:None,2017-11-13:/an-overview-of-activation-functions-used-in-neural-networks.html</guid><category>Machine Learning</category></item><item><title>Parallel tile fetching and CPU-and-memory statistics</title><link>/parallel-tile-fetching-and-cpu-and-memory-statistics.html</link><description>&lt;p&gt;The &lt;a href="http://hips.readthedocs.io"&gt;hips&lt;/a&gt; package now supports parallel tile fetching. The user can achieve this either using the &lt;a href="https://docs.python.org/3/library/urllib.html"&gt;urllib&lt;/a&gt; or &lt;a href="https://aiohttp.readthedocs.io/en/stable"&gt;aiohttp&lt;/a&gt; package.&lt;/p&gt;
&lt;p&gt;In case of &lt;a href="http://aiohttp.readthedocs.io/en/stable/"&gt;aiohttp&lt;/a&gt;, the fetched tile data is coupled with &lt;a href="http://hips.readthedocs.io/en/latest/api/hips.HipsTileMeta.html"&gt;&lt;code&gt;HipsTileMeta&lt;/code&gt;&lt;/a&gt; to create a &lt;a href="http://hips.readthedocs.io/en/latest/api/hips.HipsTile.html"&gt;&lt;code&gt;HipsTile&lt;/code&gt;&lt;/a&gt; object. This ensures there is no misalignment of tile data, otherwise, tiles could get swapped during the drawing period.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fetch_tile_aiohttp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;HipsTileMeta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;HipsTile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Fetch a HiPS tile asynchronously using aiohttp.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;raw_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HipsTile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;raw_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We also limit the amount of simultaneously open connections using &lt;a href="http://aiohttp.readthedocs.io/en/stable/client_reference.html#aiohttp.TCPConnector"&gt;&lt;code&gt;aiohttp.TCPConnector&lt;/code&gt;&lt;/a&gt; class. The returned object is passed to &lt;a href="http://aiohttp.readthedocs.io/en/stable/client_reference.html#aiohttp.ClientSession"&gt;&lt;code&gt;aiohttp.ClientSession&lt;/code&gt;&lt;/a&gt;'s &lt;code&gt;__init__&lt;/code&gt; method. This procedure …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sat, 09 Sep 2017 10:58:00 +0200</pubDate><guid isPermaLink="false">tag:None,2017-09-09:/parallel-tile-fetching-and-cpu-and-memory-statistics.html</guid><category>GSoC</category></item><item><title>Google Summer of Code 2017 final evaluation report</title><link>/google-summer-of-code-2017-final-evaluation-report.html</link><description>&lt;h4&gt;Link to GitHub repository: &lt;a href="http://github.com/hipspy/hips"&gt;&lt;code&gt;http://github.com/hipspy/hips&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In addition to the main &lt;a href="http://github.com/hipspy/hips"&gt;hips&lt;/a&gt; repository, I also maintained my personal &lt;a href="https://github.com/adl1995/HIPS-to-Py"&gt;HIPS-to-Py  repository on GitHub&lt;/a&gt;. This contains Jupyter notebooks which showcase the functionality in &lt;a href="http://github.com/hipspy/hips"&gt;hips&lt;/a&gt; and numerous related Python scripts. The &lt;a href="https://github.com/adl1995/HIPS-to-Py/wiki/HiPS-to-Py"&gt;Wiki page&lt;/a&gt; contains a short description on hips. It also contains links to resource documents and telcon notes, which are hosted on Google Docs. &lt;/p&gt;
&lt;h4&gt;List of Pull Requests&lt;/h4&gt;
&lt;h6&gt;Work related with HiPS tile drawing&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hipspy/hips/pull/105"&gt;Add progress bar support for fetching and drawing HiPS tiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hipspy/hips/pull/104"&gt;Add reporting functionality for HipsPainter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hipspy/hips/pull/99"&gt;Introduce precise drawing algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hipspy/hips/pull/75"&gt;Add methods for drawing markers over sky image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hipspy/hips/pull/91"&gt;Introduce class HipsDrawResult in simple.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hipspy/hips/pull/89"&gt;Add method to_split in SimpleTilePainter for checking whether to split a …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Mon, 28 Aug 2017 22:35:00 +0200</pubDate><guid isPermaLink="false">tag:None,2017-08-28:/google-summer-of-code-2017-final-evaluation-report.html</guid><category>GSoC</category></item><item><title>Fixing tile distortion issue in hips package</title><link>/fixing-tile-distortion-issue-in-hips-package.html</link><description>&lt;p&gt;As documented in the &lt;a href="http://hips.readthedocs.io/en/latest/drawing_algo.html#tile-distortion-issue"&gt;tile distortion issue&lt;/a&gt; section, the previous technique for drawing HiPS tiles brings some astrometry offsets for distorted tiles.&lt;/p&gt;
&lt;p&gt;An example of such distortions can be viewed at this link (uncheck "Activate deformations reduction algorithm" to view the astrometry offsets): &lt;a href="http://cds.unistra.fr/~boch/AL/test-reduce-deformations2.html"&gt;http://cds.unistra.fr/~boch/AL/test-reduce-deformations2.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To overcome this issue, the parent tile is divided into four children tiles if it meets the following two criteria:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One edge is greater than 300 pixels when projected&lt;/li&gt;
&lt;li&gt;Or, the ratio of smaller diagonal on larger diagonal is smaller than 0.7 and one of the diagonal is greater than 150 pixels when projected&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For handling these checks, a function &lt;code&gt;is_tile_distorted&lt;/code&gt; is introduced:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_tile …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Thu, 10 Aug 2017 11:28:00 +0200</pubDate><guid isPermaLink="false">tag:None,2017-08-10:/fixing-tile-distortion-issue-in-hips-package.html</guid><category>GSoC</category></item><item><title>RGB tile drawing in hips package</title><link>/rgb-tile-drawing-in-hips-package.html</link><description>&lt;p&gt;The &lt;code&gt;hips&lt;/code&gt; package now supports RGB tile drawing. To make this possible, the output image dimensions had to be altered according to the following configuration:&lt;/p&gt;
&lt;p&gt;The output image shape is two dimensional for grayscale, and three dimensional for color images:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;shape = (height, width)&lt;/code&gt; for FITS images with one grayscale channel&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shape = (height, width, 3)&lt;/code&gt; for JPG images with three RGB channels&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shape = (height, width, 4)&lt;/code&gt; for PNG images with four RGBA channels&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition to this, in-case of JPG and PNG format, the tiles are flipped in the vertical direction, which leads to incorrect tile drawing using the previous technique. The figure below is taken from the &lt;a href="http://www.ivoa.net/documents/HiPS/20160623/WD-HiPS-1.0-20160623.pdf"&gt;hips paper&lt;/a&gt;, figure 6, which shows the inverted tiles.&lt;/p&gt;
&lt;p&gt;&lt;img alt="HiPS inverted tiles figure" src="/images/flipped-hips-tile.png"&gt;&lt;/p&gt;
&lt;p&gt;To overcome this, the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sun, 23 Jul 2017 12:46:00 +0200</pubDate><guid isPermaLink="false">tag:None,2017-07-23:/rgb-tile-drawing-in-hips-package.html</guid><category>GSoC</category></item><item><title>Parameterized testing using Pytest</title><link>/parameterized-testing-using-pytest.html</link><description>&lt;p&gt;Pytest provides a feature for parameterized testing in Python. The built-in &lt;code&gt;pytest.mark.parametrize&lt;/code&gt; decorator enables parametrization of arguments for a test function. This allows the user to compare the values for input and output.&lt;/p&gt;
&lt;p&gt;Here is a typical example which shows its usage:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;get_hips_order_for_resolution_pars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tile_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;512&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.01232&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resolution_res&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.06395791924665553&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tile_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.0016022&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resolution_res&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.003997369952915971&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tile_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.00009032&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resolution_res&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.00012491781102862408&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parametrize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;get_hips_order_for_resolution_pars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_get_hips_order_for_resolution&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pars&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;hips_order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_get_hips_order_for_resolution&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tile_width&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;pars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;resolution&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;assert …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Thu, 13 Jul 2017 09:40:00 +0200</pubDate><guid isPermaLink="false">tag:None,2017-07-13:/parameterized-testing-using-pytest.html</guid><category>GSoC</category></item><item><title>Creating custom decorators in Python 3.6</title><link>/creating-custom-decorators-in-python-36.html</link><description>&lt;p&gt;In the &lt;a href="http://hips.readthedocs.io"&gt;hips&lt;/a&gt; package, often data has to be fetched from remote servers, especially HiPS tiles. One way to cut back on the queries was by introducing the &lt;a href="github.com/hipspy/hips-extra"&gt;hips-extra&lt;/a&gt; repository. This contains HiPS tiles from various HiPS surveys. This allows us to quickly fetch tiles from local storage, which makes the testing process less time-consuming.&lt;/p&gt;
&lt;p&gt;As &lt;a href="github.com/hipspy/hips-extra"&gt;hips-extra&lt;/a&gt; repository does not come with the standard &lt;a href="http://hips.readthedocs.io"&gt;hips&lt;/a&gt; package, user has to manually clone it. The availability of the package is checked using an environment variable. This can be set using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$export&lt;/span&gt; &lt;span class="nv"&gt;HIPS_EXTRA&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="se"&gt;\p&lt;/span&gt;ath&lt;span class="se"&gt;\t&lt;/span&gt;o&lt;span class="se"&gt;\h&lt;/span&gt;ips-extra
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In Python, the path can be retrieved using the &lt;code&gt;os&lt;/code&gt; module: &lt;code&gt;os.environ['HIPS_EXTRA']&lt;/code&gt;. Now, what if the user does not have …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sun, 02 Jul 2017 12:41:00 +0200</pubDate><guid isPermaLink="false">tag:None,2017-07-02:/creating-custom-decorators-in-python-36.html</guid><category>GSoC</category></item><item><title>HiPS tile drawing</title><link>/hips-tile-drawing.html</link><description>&lt;p&gt;One of the major part of the &lt;a href="http://hips.readthedocs.io"&gt;hips package&lt;/a&gt; is being able to draw HiPS tiles onto a larger sky image. This involves using projective transformation for computing and drawing a HiPS tile at the correct location. The discussion below is for the tile containing the galactic center pixel values. To achieve this, several steps are involved.&lt;/p&gt;
&lt;h3&gt;Computing boundaries of a HiPS tile&lt;/h3&gt;
&lt;p&gt;A tile is defined by four corners, &lt;a href="http://hips.readthedocs.io"&gt;hips&lt;/a&gt; uses the &lt;a href="https://github.com/astropy/astropy-healpix/blob/3fcb80921f362e3620f9892e934d4f0f69b7bf21/astropy_healpix/high_level.py"&gt;astropy_healpix.HEALPix.boundaries_skycoord&lt;/a&gt; function which returns the angle (&lt;span class="math"&gt;\(\theta\)&lt;/span&gt; and &lt;span class="math"&gt;\(\phi\)&lt;/span&gt;) in radians wrapped inside &lt;a href="http://docs.astropy.org/en/stable/api/astropy.coordinates.SkyCoord.html"&gt;astropy.coordinates.SkyCoord&lt;/a&gt; class. This contains the four corners of a HiPS tile in the order (North, West, South, East). A snippet which computes the corners of a HiPS tile …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sat, 24 Jun 2017 11:50:00 +0200</pubDate><guid isPermaLink="false">tag:None,2017-06-24:/hips-tile-drawing.html</guid><category>GSoC</category></item><item><title>Type annotations in Python 3.6 and using Mypy as a static type checker</title><link>/type-annotations-in-python-36-and-using-mypy-as-a-static-type-checker.html</link><description>&lt;p&gt;The main goal of type annotations is to open up Python code for static analysis. It makes it easier to debug and maintain code because each type is explicitly stated. It also makes the code review process simpler as the parameters and return types can be inferred from the function header. These changes were introduced in &lt;a href="https://www.python.org/dev/peps/pep-0484"&gt;PEP 484&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this regards, static type checking is the most important. It allows support for off-line third-party type checkers, such as Mypy, which will be introduced in a &lt;a href="#static-type-checking-using-mypy"&gt;later section&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Purpose of annotations&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;typing&lt;/code&gt; module in Python 3.6 contains many definitions that are useful in statically typed code. For instance, the &lt;code&gt;Any&lt;/code&gt; type is used by default for every argument and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sun, 11 Jun 2017 12:58:00 +0200</pubDate><guid isPermaLink="false">tag:None,2017-06-11:/type-annotations-in-python-36-and-using-mypy-as-a-static-type-checker.html</guid><category>GSoC</category></item><item><title>An overview of Hierarchical Progressive Surveys (HiPS) and the HEALPix framework</title><link>/an-overview-of-hierarchical-progressive-surveys-hips-and-the-healpix-framework.html</link><description>&lt;p&gt;The &lt;a href="https://www.aanda.org/articles/aa/pdf/2015/06/aa26075-15.pdf"&gt;Hierarchical Progressive Surveys (HiPS)&lt;/a&gt; is a scheme for describing astronomical images and provides a solution for managing large amounts of data. Underneath, HiPS utilizes the HEALPix framework for mapping a sphere (in this case, part of a sky) and transforms it into &lt;a href="#hips-tiles"&gt;HiPS tiles&lt;/a&gt; and &lt;a href="#hips-pixels"&gt;HiPS pixels&lt;/a&gt; which contain the astronomical data. The HiPS scheme emphasizes on usability, and abstracts the scientific details to reach a wider audience. This can be further built upon for statistical analysis of large datasets. A brief overview of HEALPix is given below before moving onto the working of HiPS.&lt;/p&gt;
&lt;h3&gt;Introduction to HEALPix&lt;/h3&gt;
&lt;p&gt;HEALPix, an acronym of 'Hierarchical Equal Area isoLatitude Pixelization of a sphere', is a framework for discretizing high resolution data. It …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Wed, 31 May 2017 19:39:00 +0200</pubDate><guid isPermaLink="false">tag:None,2017-05-31:/an-overview-of-hierarchical-progressive-surveys-hips-and-the-healpix-framework.html</guid><category>GSoC</category></item><item><title>An introduction to coordinate systems used in Astronomy</title><link>/an-introduction-to-coordinate-systems-used-in-astronomy.html</link><description>&lt;p&gt;From &lt;a href="https://en.wikipedia.org/wiki/Coordinate_system"&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In &lt;a href="https://en.wikipedia.org/wiki/Geometry" title="Geometry"&gt;geometry&lt;/a&gt;, a &lt;strong&gt;coordinate system&lt;/strong&gt; is a system which uses one or more &lt;a href="https://en.wikipedia.org/wiki/Number" title="Number"&gt;numbers&lt;/a&gt;, or &lt;strong&gt;coordinates&lt;/strong&gt;, to uniquely determine the position of the &lt;a href="https://en.wikipedia.org/wiki/Point_(geometry)" title="Point (geometry)"&gt;points&lt;/a&gt; or other geometric elements on a &lt;a href="https://en.wikipedia.org/wiki/Manifold" title="Manifold"&gt;manifold&lt;/a&gt; such as &lt;a href="https://en.wikipedia.org/wiki/Euclidean_space" title="Euclidean space"&gt;Euclidean space&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The following text briefly explains the coordinate systems being used in astronomy, some of which are listed below:&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;RA / DEC&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;RA (right ascension) and DEC (declination) are the longitudes and latitudes of the sky. RA corresponds to east / west direction, similar to longitude, while DEC measures north / south directions, like latitude.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;WCS&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;World Coordinate System (WCS) is a set of transformations that map pixel locations in an image to their real-world units, such as their position on the sky sphere. These transformations can …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Tue, 23 May 2017 12:37:00 +0200</pubDate><guid isPermaLink="false">tag:None,2017-05-23:/an-introduction-to-coordinate-systems-used-in-astronomy.html</guid><category>Astronomy</category></item><item><title>A comparison of response times using URLLib, GRequests, and asyncio</title><link>/a-comparison-of-response-times-using-urllib-grequests-and-asyncio.html</link><description>&lt;p&gt;For the &lt;a href="https://github.com/hipspy/hips"&gt;HiPS client&lt;/a&gt; multiple tiles have to be fetched for time efficiency. To achieve this, we create a separate thread for each outgoing request. Thus, requests are sent concurrently. A comparison is done utilizing Python's &lt;code&gt;threading&lt;/code&gt; library. The elapsed time is calculated using the &lt;code&gt;time&lt;/code&gt; module. For fetching the tiles &lt;code&gt;urllib&lt;/code&gt;, &lt;code&gt;grequests&lt;/code&gt;, &lt;code&gt;aiohttp&lt;/code&gt;, and &lt;code&gt;asyncio&lt;/code&gt; packages are used. The HiPS survey chosen for this comparison is &lt;code&gt;alasky.u-strasbg.fr&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;For fetching 10 tiles, it takes the following time (in seconds):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Elapsed Time URLLib (without concurrency): 3.5430831909179688
Elapsed Time URLLib (with concurrency): 0.388397216796875
Elapsed Time URLLib (with aiohttp): 0.3900480270385742
Elapsed Time GRequests: 1.6238431930541992
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Similarly, for fetching 100 tiles, it takes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Elapsed Time URLLib (without concurrency): 37 …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Tue, 09 May 2017 15:54:00 +0200</pubDate><guid isPermaLink="false">tag:None,2017-05-09:/a-comparison-of-response-times-using-urllib-grequests-and-asyncio.html</guid><category>GSoC</category></item><item><title>My First Article</title><link>/my-first-article.html</link><description>&lt;p&gt;Hello World!&lt;/p&gt;
&lt;p&gt;This blog will be extensively used for posting GSoC updates, apart from other technical ramblings.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sun, 19 Mar 2017 22:45:00 +0100</pubDate><guid isPermaLink="false">tag:None,2017-03-19:/my-first-article.html</guid><category>GSoC</category></item></channel></rss>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>/home/adeel - image-processing</title><link href="https://adl1995.github.io/" rel="alternate"></link><link href="https://adl1995.github.io/feeds/image-processing.atom.xml" rel="self"></link><id>https://adl1995.github.io/</id><updated>2022-04-15T14:22:00+02:00</updated><entry><title>My course portfolio for Computational Photography</title><link href="https://adl1995.github.io/my-course-portfolio-for-computational-photography.html" rel="alternate"></link><published>2022-04-15T14:22:00+02:00</published><updated>2022-04-15T14:22:00+02:00</updated><author><name>Adeel Ahmad</name></author><id>tag:adl1995.github.io,2022-04-15:/my-course-portfolio-for-computational-photography.html</id><summary type="html">&lt;p&gt;This semester I took Georgia Tech&amp;#8217;s &lt;a href="https://omscs.gatech.edu/cs-6475-computational-photography"&gt;Computational Photography&lt;/a&gt; course. It was a very hands-on course, mostly comprising of assignments and projects. This post includes the results for all its assignments and&amp;nbsp;projects.&lt;/p&gt;
&lt;h2&gt;1. Pyramid&amp;nbsp;blending&lt;/h2&gt;
&lt;p&gt;The goal of this assignment was to combine two separate images into a seamlessly blended image, using a mask. The input took a left image, a right image, and a mask, which was a binary image used to overlap the two&amp;nbsp;inputs.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pyramid blending" src="https://adl1995.github.io/images/portfolio/pyramid_blending.png"&gt;&lt;/p&gt;
&lt;h2&gt;2.&amp;nbsp;Panoramas&lt;/h2&gt;
&lt;p&gt;For this assignment we wrote code to align &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; stitch together a series of images into a panorama. We followed the text from &lt;a href="http://szeliski.org/Book/1stEdition.htm"&gt;Computer Vision: Algorithms and Applications&lt;/a&gt; book. The assignment followed homography techniques to create the output&amp;nbsp;picture.&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/panorama_1.jpg" alt="panorama_1" style="width:350px;"/&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/panorama_2.jpg" alt="panorama_2" style="width:350px;"/&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/panorama_3.jpg" alt="panorama_3" style="width:350px;"/&gt;
&lt;/p&gt;

&lt;p&gt;After stitching …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This semester I took Georgia Tech&amp;#8217;s &lt;a href="https://omscs.gatech.edu/cs-6475-computational-photography"&gt;Computational Photography&lt;/a&gt; course. It was a very hands-on course, mostly comprising of assignments and projects. This post includes the results for all its assignments and&amp;nbsp;projects.&lt;/p&gt;
&lt;h2&gt;1. Pyramid&amp;nbsp;blending&lt;/h2&gt;
&lt;p&gt;The goal of this assignment was to combine two separate images into a seamlessly blended image, using a mask. The input took a left image, a right image, and a mask, which was a binary image used to overlap the two&amp;nbsp;inputs.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pyramid blending" src="https://adl1995.github.io/images/portfolio/pyramid_blending.png"&gt;&lt;/p&gt;
&lt;h2&gt;2.&amp;nbsp;Panoramas&lt;/h2&gt;
&lt;p&gt;For this assignment we wrote code to align &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; stitch together a series of images into a panorama. We followed the text from &lt;a href="http://szeliski.org/Book/1stEdition.htm"&gt;Computer Vision: Algorithms and Applications&lt;/a&gt; book. The assignment followed homography techniques to create the output&amp;nbsp;picture.&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/panorama_1.jpg" alt="panorama_1" style="width:350px;"/&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/panorama_2.jpg" alt="panorama_2" style="width:350px;"/&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/panorama_3.jpg" alt="panorama_3" style="width:350px;"/&gt;
&lt;/p&gt;

&lt;p&gt;After stitching these all up, I got this&amp;nbsp;result.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Panorama" src="https://adl1995.github.io/images/portfolio/panorama_result.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;PS&lt;/span&gt;. I took these pictures from the Salève mountain in&amp;nbsp;France.&lt;/p&gt;
&lt;h2&gt;3. &lt;span class="caps"&gt;HDR&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;This one required us to produce &lt;span class="caps"&gt;HDR&lt;/span&gt; images, using input images captured at various exposure&amp;nbsp;levels.&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/bamboo_all.jpg" alt="bamboo_all"/&gt;
    &lt;p align = "center"&gt;(Input&amp;nbsp;images)&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;For the output we produced a basic &lt;span class="caps"&gt;HDR&lt;/span&gt; image and it&amp;#8217;s best version, using histogram&amp;nbsp;equalization.&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/basic_hdr.png" alt="basic_hdr" style="width:350px;"/&gt;
    &lt;!-- &lt;p align = "center"&gt;(Basic&amp;nbsp;HDR)&lt;/p&gt; --&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/best_hdr.png" alt="best_hdr" style="width:350px;"/&gt;
    &lt;!-- &lt;p align = "center"&gt;(Best&amp;nbsp;HDR)&lt;/p&gt; --&gt;
&lt;/p&gt;

&lt;p&gt;Finally, we also created a color-enchanged version using Gamma&amp;nbsp;correction.&lt;/p&gt;
&lt;p&gt;&lt;img alt="HDR" src="https://adl1995.github.io/images/portfolio/best_hdr_color_enhanced.png"&gt;&lt;/p&gt;
&lt;h2&gt;4. Video&amp;nbsp;Textures&lt;/h2&gt;
&lt;p&gt;In this assignment we infinitely looped pieces of video. The output was a &lt;span class="caps"&gt;GIF&lt;/span&gt; with very smooth&amp;nbsp;transitions.&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/texture_frames.jpg" alt="texture_frames" style="width:400px;"/&gt;
&lt;/p&gt;

&lt;p&gt;This was the final result. (Not totally smooth, but&amp;nbsp;almost.)&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/salt_texture.gif" alt="salt_texture" style="width:300px;"/&gt;
&lt;/p&gt;

&lt;h2&gt;5. Image&amp;nbsp;Inpainting&lt;/h2&gt;
&lt;p&gt;This was our first project which required us to implement an image inpainting technique to remove objects from pictures. This is similar to the &lt;a href="https://androidgadget.org/google-pixel-6-magic-eraser-si-vous-pensez-que-cela-ne-fonctionne-pas-vous-lutilisez-mal/"&gt;Magic Eraser&lt;/a&gt; tool available on the Pixel 6. We replicated results from this &lt;a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/criminisi_tip2004.pdf"&gt;research paper&lt;/a&gt;.&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/inpaint_input_2.jpg" alt="inpaint_input_2" style="width:350px;"/&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/inpaint_result_2.png" alt="inpaint_result_2" style="width:350px;"/&gt;
&lt;/p&gt;

&lt;p align="center"&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/inpaint_input_1.jpg" alt="inpaint_input_1" style="width:350px;"/&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/inpaint_result_1.png" alt="inpaint_result_1" style="width:350px;"/&gt;
&lt;/p&gt;

&lt;h2&gt;6. Seam&amp;nbsp;Carving&lt;/h2&gt;
&lt;p&gt;The final project was based on seam carving to shrink or expand images. We implemented the backward and forward energy methods from these two research&amp;nbsp;papers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.faculty.idc.ac.il/arik/SCWeb/imret/index.html"&gt;Seam Carving for Content-Aware Image Resizing.&amp;nbsp;(2007)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.faculty.idc.ac.il/arik/SCWeb/vidret/index.html"&gt;Improved Seam Carving for Video Retargeting.&amp;nbsp;(2008)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p align="center"&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/beach.png" alt="beach" style="width:450px;"/&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/beach_output.png" alt="beach_output" style="width:250px;"/&gt;
&lt;/p&gt;

&lt;p align="center"&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/bench.png" alt="bench" style="width:430px;"/&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/bench_output.png" alt="bench_output" style="width:250px;"/&gt;
&lt;/p&gt;

&lt;p&gt;The red lines in this image show where the pixels were removed in the output image. These are points where the removal would have the least effect in the output&amp;nbsp;image.&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;img src="https://adl1995.github.io/images/portfolio/bench_output_red.png" alt="bench_output_red" style="width:500px;"/&gt;
&lt;/p&gt;</content><category term="image-processing"></category></entry><entry><title>Building a Camera Obscura</title><link href="https://adl1995.github.io/building-a-camera-obscura.html" rel="alternate"></link><published>2022-01-29T11:02:00+01:00</published><updated>2022-01-29T11:02:00+01:00</updated><author><name>Adeel Ahmad</name></author><id>tag:adl1995.github.io,2022-01-29:/building-a-camera-obscura.html</id><summary type="html">&lt;p&gt;A &lt;a href="https://en.wikipedia.org/wiki/Camera_obscura"&gt;camera obscura&lt;/a&gt; is the predecessor of modern day cameras. It works by letting light in through a small pinhole and projects it onto a surface (e.g. a&amp;nbsp;wall).&lt;/p&gt;
&lt;p&gt;To build a room obscura we need to choose a room which gets plenty of sunlight. I chose my bedroom for&amp;nbsp;this.&lt;/p&gt;
&lt;p&gt;&lt;img alt="scene" src="https://adl1995.github.io/images/obscura/scene.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Next we need to identify all the sources of light and completely seal them. In my case I used garbage bags to cover my two&amp;nbsp;windows.&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;img src="https://adl1995.github.io/images/obscura/setup_2.jpg" alt="setup_2" style="width:350px;"/&gt;
    &lt;img src="https://adl1995.github.io/images/obscura/setup_3.jpg" alt="setup_3" style="width:350px;"/&gt;
&lt;/p&gt;

&lt;p&gt;I used packing tape instead of duct tape as it can tear off paint from the wood. However, this led to some light bleeding in from the edges. I fixed this using aluminum&amp;nbsp;foil.&lt;/p&gt;
&lt;p&gt;&lt;img alt="failed" src="https://adl1995.github.io/images/obscura/failed.jpg"&gt;&lt;/p&gt;
&lt;p&gt;I experimented with three pinholes of various&amp;nbsp;sizes …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A &lt;a href="https://en.wikipedia.org/wiki/Camera_obscura"&gt;camera obscura&lt;/a&gt; is the predecessor of modern day cameras. It works by letting light in through a small pinhole and projects it onto a surface (e.g. a&amp;nbsp;wall).&lt;/p&gt;
&lt;p&gt;To build a room obscura we need to choose a room which gets plenty of sunlight. I chose my bedroom for&amp;nbsp;this.&lt;/p&gt;
&lt;p&gt;&lt;img alt="scene" src="https://adl1995.github.io/images/obscura/scene.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Next we need to identify all the sources of light and completely seal them. In my case I used garbage bags to cover my two&amp;nbsp;windows.&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;img src="https://adl1995.github.io/images/obscura/setup_2.jpg" alt="setup_2" style="width:350px;"/&gt;
    &lt;img src="https://adl1995.github.io/images/obscura/setup_3.jpg" alt="setup_3" style="width:350px;"/&gt;
&lt;/p&gt;

&lt;p&gt;I used packing tape instead of duct tape as it can tear off paint from the wood. However, this led to some light bleeding in from the edges. I fixed this using aluminum&amp;nbsp;foil.&lt;/p&gt;
&lt;p&gt;&lt;img alt="failed" src="https://adl1995.github.io/images/obscura/failed.jpg"&gt;&lt;/p&gt;
&lt;p&gt;I experimented with three pinholes of various&amp;nbsp;sizes.&lt;/p&gt;
&lt;p&gt;&lt;img alt="pinhole" src="https://adl1995.github.io/images/obscura/pinhole.jpg"&gt;&lt;/p&gt;
&lt;p&gt;After trapping out all the light I mounted my camera next to my pinhole and captured the&amp;nbsp;image.&lt;/p&gt;
&lt;p&gt;&lt;img alt="setup" src="https://adl1995.github.io/images/obscura/setup.jpg"&gt;&lt;/p&gt;
&lt;p&gt;This was the best result I could get using a pinhole of 0.4&amp;nbsp;inches.&lt;/p&gt;
&lt;p&gt;&lt;img alt="original_image_1" src="https://adl1995.github.io/images/obscura/original_image_1.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;Lessons&amp;nbsp;learned&lt;/h3&gt;
&lt;p&gt;It is extremely important to perform this experiment on a sunny day, otherwise you will not get a clear&amp;nbsp;image.&lt;/p&gt;
&lt;p&gt;You should also experiment with different focal lengths, i.e. adjust the distance between your pinhole and the screen. This can produce a sharper&amp;nbsp;image.&lt;/p&gt;</content><category term="image-processing"></category></entry></feed>
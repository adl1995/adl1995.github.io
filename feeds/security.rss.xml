<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>/home/adeel - security</title><link>https://adl1995.github.io/</link><description></description><lastBuildDate>Mon, 08 Jan 2024 08:42:00 +0100</lastBuildDate><item><title>The Two-Factor Authentication System at CERN</title><link>https://adl1995.github.io/the-two-factor-authentication-system-at-cern.html</link><description>&lt;p&gt;This blog post is a summary of my project at the European Organization for Nuclear Research (CERN) where I worked in their Identity and Access Management (IAM) team.&lt;/p&gt;
&lt;p&gt;My project was to introduce Two-Factor Authentication (2FA) in the Keycloak system. CERN started migration to the Keycloak Identity Provider (IdP) as part of the MALT project which aimed to move away from Microsoft products. The project was &lt;a href="https://home.cern/news/news/computing/three-year-malt-project-comes-close"&gt;cancelled&lt;/a&gt; in late 2021, however, some services were allowed to continue development. The IAM team was allowed to continue development for the CERN SSO, which was based on Keycloak.&lt;/p&gt;
&lt;p&gt;We developed a custom 2FA implementation with Keycloak which allowed users to optionally login from the SSO login page. Internally, this setup posed a few …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Mon, 08 Jan 2024 08:42:00 +0100</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2024-01-08:/the-two-factor-authentication-system-at-cern.html</guid><category>security</category></item><item><title>Rate limiting in HAProxy and Nginx</title><link>https://adl1995.github.io/rate-limiting-in-haproxy-and-nginx.html</link><description>&lt;p&gt;Rate-limiting is a common strategy for safe guarding a server from potential DDoS attacks or sudden peaks in network traffic. Rate-limiting instructs the server to block requests from certain IP addresses that are sending an unusual number of requests to the system.&lt;/p&gt;
&lt;p&gt;We can apply rate-limiting to both Nginx and HAProxy. Nginx runs on each end node hosting the service, while HAProxy serves as the load-balancer and distributes incoming requests among available nodes. This post describes how to rate-limit requests on both Nginx and HAProxy and shows how to whitelist IPs and rate-limit a single URL. The final section shows how to apply this configuration in Puppet.&lt;/p&gt;
&lt;h2&gt;1. Rate-limiting in HAProxy&lt;/h2&gt;
&lt;p&gt;This section describes how to configure HAProxy to rate-limit …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Mon, 29 May 2023 18:00:00 +0200</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2023-05-29:/rate-limiting-in-haproxy-and-nginx.html</guid><category>Security</category></item><item><title>The Kerberos Authentication System for Single Sign-On (SSO)</title><link>https://adl1995.github.io/the-kerberos-authentication-system-for-single-sign-on-sso.html</link><description>&lt;p&gt;When working with authentication protocols the commonly used technique in the past was known as &lt;em&gt;authentication by assertion&lt;/em&gt;. In this scheme a user logs in to their machine which then authenticates their request to a remote server. Once the authentication is finished the user can then communicate with other services. This provides a very low level of security, which has led to numerous vulnerabilities in the early versions of the &lt;a href="https://en.wikipedia.org/wiki/Berkeley_r-commands#Security"&gt;rlogin&lt;/a&gt; Unix login utility.&lt;/p&gt;
&lt;p&gt;An alternative solution is for the user to repeatedly provide their password each time they wish to use a service. This however requires the user to send their plain text password over the network, which could potentially be intercepted by a third-party user and can get …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sun, 21 Jul 2019 21:43:00 +0200</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2019-07-21:/the-kerberos-authentication-system-for-single-sign-on-sso.html</guid><category>Security</category></item></channel></rss>